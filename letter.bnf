// lexical grammar

%lex

%%


\s+ /* 省略 whitespaces */

\d+  return "NUMBER"



/lex



// syntactic grammar

// 强制 left-associative 写在越后面 优先级越高
// %left '+'
// %left '*'

%%

Exp : AdditiveExp;


AdditiveExp : AdditiveExp '+' MultiplicativeExp { $$ = $1 + $3 }
  |  AdditiveExp '-' MultiplicativeExp { $$ = $1 - $3 }
  | MultiplicativeExp
  ;

MultiplicativeExp : MultiplicativeExp '*' PrimaryExp { $$ = $1 * $3 }
  | MultiplicativeExp '/' PrimaryExp { $$ = $1 / $3 }
  | PrimaryExp
  ;


PrimaryExp : Literal
           | parenthesizedExp
           ;

Literal : NumericLiteral;


// callback
NumericLiteral : NUMBER { $$ = Number($1) };
// $2 -> Exp
parenthesizedExp: '(' Exp ')' { $$ = $2 };
